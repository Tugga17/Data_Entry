def run_perfman_uploader(excel_path, on_complete=None):
    try:
        # Your existing Perfman logic here...
        subprocess.run(['PerfmanUploader.exe', excel_path], check=True)
    except Exception as e:
        print(f"Upload failed: {e}")
    finally:
        if on_complete:
            on_complete()

def trigger_custom_perfman_upload(self):
    from tkinter import Tk
    root = Tk()
    root.withdraw()  # Hide unused window

    excel_path = filedialog.askopenfilename(
        title="Select Excel File to Upload to Perfman",
        filetypes=[("Excel files", "*.xlsx *.xlsm *.xls")]
    )

    if excel_path:
        self.upload_button.config(state='disabled')
        self.start_spinner()

        def on_upload_complete():
            self.master.after(0, lambda: self.finish_upload_ui())

        threading.Thread(
            target=run_perfman_uploader,
            args=(excel_path, on_upload_complete),
            daemon=True
        ).start()


def start_spinner(self):
    self.spinner_label.config(text="Uploading... ⏳")
    self.spinner_label.update()

def finish_upload_ui(self):
    self.spinner_label.config(text="Upload complete ✅")
    self.upload_button.config(state='normal')

self.spinner_label = tk.Label(self.master, text="")
self.spinner_label.pack()
